name: 'publish'

on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'ubuntu-22.04'
            args: '--target aarch64-unknown-linux-gnu'

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}



      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install aarch64 target
        if: matrix.platform == 'ubuntu-22.04'
        run: rustup target add aarch64-unknown-linux-gnu

      - name : add
        run : |
          echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy main universe restricted multiverse" | sudo tee -a /etc/apt/sources.list \
          echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy-updates main universe restricted multiverse" | sudo tee -a /etc/apt/sources.list \
          echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy-security main universe restricted multiverse" | sudo tee -a /etc/apt/sources.list \
          sudo apt-get update
        
      - name: install ARM dependencies
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get install -y \
            gcc-aarch64-linux-gnu \
            libwebkit2gtk-4.0-dev:arm64 \
            libssl-dev:arm64

      - name: configure Rust for cross-compilation
        run: |
          mkdir -p .cargo
          echo '[target.aarch64-unknown-linux-gnu]' >> .cargo/config.toml
          echo 'linker = "aarch64-linux-gnu-gcc"' >> .cargo/config.toml

      - name: Set environment variables for cross-compilation
        run: |
          echo "PKG_CONFIG_SYSROOT_DIR=/usr/aarch64-linux-gnu/" >> $GITHUB_ENV
      - name: Enable ARM64 architecture
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo dpkg --add-architecture arm64
          sudo apt-get update
      - name: install frontend dependencies
        run: npm install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}
